# vim:fileencoding=utf-8:foldmethod=marker

font_family      Hack Nerd Font
# bold_font        auto
# italic_font      auto
# bold_italic_font auto

font_size 14.0

copy_on_select clipboard

#: Copy to clipboard or a private buffer on select. With this set to
#: clipboard, selecting text with the mouse will cause the text to be
#: copied to clipboard. Useful on platforms such as macOS that do not
#: have the concept of primary selection. You can instead specify a
#: name such as a1 to copy to a private kitty buffer. Map a shortcut
#: with the paste_from_buffer action to paste from this private
#: buffer. For example::


# paste_actions quote-urls-at-prompt,confirm

#: A comma separated list of actions to take when pasting text into
#: the terminal. The supported paste actions are:

#: quote-urls-at-prompt:
#:     If the text being pasted is a URL and the cursor is at a shell prompt,
#:     automatically quote the URL (needs shell_integration).
#: replace-dangerous-control-codes
#:     Replace dangerous control codes from pasted text, without confirmation.
#: replace-newline
#:     Replace the newline character from pasted text, without confirmation.
#: confirm:
#:     Confirm the paste if the text to be pasted contains any terminal control codes
#:     as this can be dangerous, leading to code execution if the shell/program running
#:     in the terminal does not properly handle these.
#: confirm-if-large
#:     Confirm the paste if it is very large (larger than 16KB) as pasting
#:     large amounts of text into shells can be very slow.
#: filter:
#:     Run the filter_paste() function from the file paste-actions.py in
#:     the kitty config directory on the pasted text. The text returned by the
#:     function will be actually pasted.
#: no-op:
#:     Has no effect.


#: Terminal bell {{{

# enable_audio_bell yes

#: The audio bell. Useful to disable it in environments that require
#: silence.

# visual_bell_duration 0.0

#: The visual bell duration (in seconds). Flash the screen when a bell
#: occurs for the specified number of seconds. Set to zero to disable.

# visual_bell_color none

#: The color used by visual bell. Set to none will fall back to
#: selection background color. If you feel that the visual bell is too
#: bright, you can set it to a darker color.

# window_alert_on_bell yes

#: Request window attention on bell. Makes the dock icon bounce on
#: macOS or the taskbar flash on linux.

# bell_on_tab "ðŸ”” "

#: Some text or a Unicode symbol to show on the tab if a window in the
#: tab that does not have focus has a bell. If you want to use leading
#: or trailing spaces, surround the text with quotes. See
#: tab_title_template for how this is rendered.

#: For backwards compatibility, values of yes, y and true are
#: converted to the default bell symbol and no, n, false and none are
#: converted to the empty string.


window_padding_width 0 7

#: The window padding (in pts) (blank area between the text and the
#: window border). A single value sets all four sides. Two values set
#: the vertical and horizontal sides. Three values set top, horizontal
#: and bottom. Four values set top, right, bottom and left.

# hide_window_decorations no

#: Hide the window decorations (title-bar and window borders) with
#: yes. On macOS, titlebar-only and titlebar-and-corners can be used
#: to only hide the titlebar and the rounded corners. Whether this
#: works and exactly what effect it has depends on the window
#: manager/operating system. Note that the effects of changing this
#: option when reloading config are undefined. When using titlebar-
#: only, it is useful to also set window_margin_width and
#: placement_strategy to prevent the rounded corners from clipping
#: text. Or use titlebar-and-corners.


#: Color scheme {{{

# foreground #dddddd
# background #000000

#: The foreground and background colors.

# background_opacity 1.0

#: The opacity of the background. A number between zero and one, where
#: one is opaque and zero is fully transparent. This will only work if
#: supported by the OS (for instance, when using a compositor under
#: X11). Note that it only sets the background color's opacity in
#: cells that have the same background color as the default terminal
#: background, so that things like the status bar in vim, powerline
#: prompts, etc. still look good. But it means that if you use a color
#: theme with a background color in your editor, it will not be
#: rendered as transparent. Instead you should change the default
#: background color in your kitty config and not use a background
#: color in the editor color scheme. Or use the escape codes to set
#: the terminals default colors in a shell script to launch your
#: editor. Be aware that using a value less than 1.0 is a (possibly
#: significant) performance hit. When using a low value for this
#: setting, it is desirable that you set the background color to a
#: color the matches the general color of the desktop background, for
#: best text rendering.  If you want to dynamically change
#: transparency of windows, set dynamic_background_opacity to yes
#: (this is off by default as it has a performance cost). Changing
#: this option when reloading the config will only work if
#: dynamic_background_opacity was enabled in the original config.

# background_blur 0

#: Set to a positive value to enable background blur (blurring of the
#: visuals behind a transparent window) on platforms that support it.
#: Only takes effect when background_opacity is less than one. On
#: macOS, this will also control the blur radius (amount of blurring).
#: Setting it to too high a value will cause severe performance issues
#: and/or rendering artifacts. Usually, values up to 64 work well.
#: Note that this might cause performance issues, depending on how the
#: platform implements it, so use with care. Currently supported on
#: macOS and KDE under X11.

# background_image none

#: Path to a background image. Must be in PNG format.

# background_image_layout tiled

#: Whether to tile, scale or clamp the background image. The value can
#: be one of tiled, mirror-tiled, scaled, clamped, centered or
#: cscaled. The scaled and cscaled values scale the image to the
#: window size, with cscaled preserving the image aspect ratio.

# background_image_linear no

#: When background image is scaled, whether linear interpolation
#: should be used.

# dynamic_background_opacity no

#: Allow changing of the background_opacity dynamically, using either
#: keyboard shortcuts (increase_background_opacity and
#: decrease_background_opacity) or the remote control facility.
#: Changing this option by reloading the config is not supported.

# background_tint 0.0

#: How much to tint the background image by the background color. This
#: option makes it easier to read the text. Tinting is done using the
#: current background color for each window. This option applies only
#: if background_opacity is set and transparent windows are supported
#: or background_image is set.

# background_tint_gaps 1.0

#: How much to tint the background image at the window gaps by the
#: background color, after applying background_tint. Since this is
#: multiplicative with background_tint, it can be used to lighten the
#: tint over the window gaps for a *separated* look.

# dim_opacity 0.4

#: How much to dim text that has the DIM/FAINT attribute set. One
#: means no dimming and zero means fully dimmed (i.e. invisible).

# selection_foreground #000000
# selection_background #fffacd

#: The foreground and background colors for text selected with the
#: mouse. Setting both of these to none will cause a "reverse video"
#: effect for selections, where the selection will be the cell text
#: color and the text will become the cell background color. Setting
#: only selection_foreground to none will cause the foreground color
#: to be used unchanged. Note that these colors can be overridden by
#: the program running in the terminal.

#: The color table {{{

#: The 256 terminal colors. There are 8 basic colors, each color has a
#: dull and bright version, for the first 16 colors. You can set the
#: remaining 240 colors as color16 to color255.

# color0 #000000
# color8 #767676

#: black

# color1 #cc0403
# color9 #f2201f

#: red

# color2  #19cb00
# color10 #23fd00

#: green

# color3  #cecb00
# color11 #fffd00

#: yellow

# color4  #0d73cc
# color12 #1a8fff

#: blue

# color5  #cb1ed1
# color13 #fd28ff

#: magenta

# color6  #0dcdcd
# color14 #14ffff

#: cyan

# color7  #dddddd
# color15 #ffffff

#: white

# mark1_foreground black

#: Color for marks of type 1

# mark1_background #98d3cb

#: Color for marks of type 1 (light steel blue)

# mark2_foreground black

#: Color for marks of type 2

# mark2_background #f2dcd3

#: Color for marks of type 1 (beige)

# mark3_foreground black

#: Color for marks of type 3

# mark3_background #f274bc

#: Color for marks of type 3 (violet)

#: }}}

#: }}}


macos_option_as_alt left

#: Use the Option key as an Alt key on macOS. With this set to no,
#: kitty will use the macOS native Option+Key to enter Unicode
#: character behavior. This will break any Alt+Key keyboard shortcuts
#: in your terminal programs, but you can use the macOS Unicode input
#: technique. You can use the values: left, right or both to use only
#: the left, right or both Option keys as Alt, instead. Note that
#: kitty itself always treats Option the same as Alt. This means you
#: cannot use this option to configure different kitty shortcuts for
#: Option+Key vs. Alt+Key. Also, any kitty shortcuts using
#: Option/Alt+Key will take priority, so that any such key presses
#: will not be passed to terminal programs running inside kitty.
#: Changing this option by reloading the config is not supported.

# macos_hide_from_tasks no

#: Hide the kitty window from running tasks on macOS (âŒ˜+Tab and the
#: Dock). Changing this option by reloading the config is not
#: supported.

# macos_quit_when_last_window_closed no

#: Have kitty quit when all the top-level windows are closed on macOS.
#: By default, kitty will stay running, even with no open windows, as
#: is the expected behavior on macOS.

# macos_window_resizable yes

#: Disable this if you want kitty top-level OS windows to not be
#: resizable on macOS.

# macos_traditional_fullscreen no

#: Use the macOS traditional full-screen transition, that is faster,
#: but less pretty.

# macos_show_window_title_in all

#: Control where the window title is displayed on macOS. A value of
#: window will show the title of the currently active window at the
#: top of the macOS window. A value of menubar will show the title of
#: the currently active window in the macOS global menu bar, making
#: use of otherwise wasted space. A value of all will show the title
#: in both places, and none hides the title. See
#: macos_menubar_title_max_length for how to control the length of the
#: title in the menu bar.

# macos_menubar_title_max_length 0

#: The maximum number of characters from the window title to show in
#: the macOS global menu bar. Values less than one means that there is
#: no maximum limit.

# macos_custom_beam_cursor no

#: Use a custom mouse cursor for macOS that is easier to see on both
#: light and dark backgrounds. Nowadays, the default macOS cursor
#: already comes with a white border. WARNING: this might make your
#: mouse cursor invisible on dual GPU machines. Changing this option
#: by reloading the config is not supported.

# macos_colorspace srgb

#: The colorspace in which to interpret terminal colors. The default
#: of srgb will cause colors to match those seen in web browsers. The
#: value of default will use whatever the native colorspace of the
#: display is. The value of displayp3 will use Apple's special
#: snowflake display P3 color space, which will result in over
#: saturated (brighter) colors with some color shift. Reloading
#: configuration will change this value only for newly created OS
#: windows.

# linux_display_server auto

#: Choose between Wayland and X11 backends. By default, an appropriate
#: backend based on the system state is chosen automatically. Set it
#: to x11 or wayland to force the choice. Changing this option by
#: reloading the config is not supported.

#: }}}

